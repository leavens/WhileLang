/**
 * generated by Xtext 2.13.0
 */
package edu.ucf.cs.whilelang.whileLang;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see edu.ucf.cs.whilelang.whileLang.WhileLangFactory
 * @model kind="package"
 * @generated
 */
public interface WhileLangPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "whileLang";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.ucf.edu/cs/whilelang/WhileLang";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "whileLang";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  WhileLangPackage eINSTANCE = edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl.init();

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.ProgramImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.SImpl <em>S</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.SImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getS()
   * @generated
   */
  int S = 1;

  /**
   * The number of structural features of the '<em>S</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int S_FEATURE_COUNT = PROGRAM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.CompoundSImpl <em>Compound S</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.CompoundSImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getCompoundS()
   * @generated
   */
  int COMPOUND_S = 2;

  /**
   * The feature id for the '<em><b>Stmts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_S__STMTS = S_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Compound S</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_S_FEATURE_COUNT = S_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.AssignSImpl <em>Assign S</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.AssignSImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getAssignS()
   * @generated
   */
  int ASSIGN_S = 3;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN_S__VAR = S_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Aexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN_S__AEXP = S_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Assign S</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN_S_FEATURE_COUNT = S_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.SkipSImpl <em>Skip S</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.SkipSImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getSkipS()
   * @generated
   */
  int SKIP_S = 4;

  /**
   * The number of structural features of the '<em>Skip S</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SKIP_S_FEATURE_COUNT = S_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.WhileSImpl <em>While S</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileSImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getWhileS()
   * @generated
   */
  int WHILE_S = 5;

  /**
   * The feature id for the '<em><b>Bexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_S__BEXP = S_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_S__BLOCK = S_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>While S</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_S_FEATURE_COUNT = S_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.IfSImpl <em>If S</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.IfSImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getIfS()
   * @generated
   */
  int IF_S = 6;

  /**
   * The feature id for the '<em><b>Bexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_S__BEXP = S_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>S1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_S__S1 = S_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>S2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_S__S2 = S_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If S</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_S_FEATURE_COUNT = S_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.AExprImpl <em>AExpr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.AExprImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getAExpr()
   * @generated
   */
  int AEXPR = 7;

  /**
   * The number of structural features of the '<em>AExpr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AEXPR_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.VarRefExprImpl <em>Var Ref Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.VarRefExprImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getVarRefExpr()
   * @generated
   */
  int VAR_REF_EXPR = 8;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF_EXPR__VAR = AEXPR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Var Ref Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF_EXPR_FEATURE_COUNT = AEXPR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.NumLitExprImpl <em>Num Lit Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.NumLitExprImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getNumLitExpr()
   * @generated
   */
  int NUM_LIT_EXPR = 9;

  /**
   * The feature id for the '<em><b>Negated</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_LIT_EXPR__NEGATED = AEXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_LIT_EXPR__VAL = AEXPR_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Num Lit Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_LIT_EXPR_FEATURE_COUNT = AEXPR_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BExprImpl <em>BExpr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.BExprImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBExpr()
   * @generated
   */
  int BEXPR = 10;

  /**
   * The number of structural features of the '<em>BExpr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEXPR_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.NotExprImpl <em>Not Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.NotExprImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getNotExpr()
   * @generated
   */
  int NOT_EXPR = 11;

  /**
   * The feature id for the '<em><b>Bexp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPR__BEXP = BEXPR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Not Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPR_FEATURE_COUNT = BEXPR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BCompExpImpl <em>BComp Exp</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.BCompExpImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBCompExp()
   * @generated
   */
  int BCOMP_EXP = 12;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BCOMP_EXP__LEFT = BEXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BCOMP_EXP__OP = BEXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BCOMP_EXP__RIGHT = BEXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>BComp Exp</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BCOMP_EXP_FEATURE_COUNT = BEXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BPrimaryImpl <em>BPrimary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.BPrimaryImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBPrimary()
   * @generated
   */
  int BPRIMARY = 13;

  /**
   * The feature id for the '<em><b>Bval</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BPRIMARY__BVAL = BEXPR_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>BPrimary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BPRIMARY_FEATURE_COUNT = BEXPR_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.AExpressionImpl <em>AExpression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.AExpressionImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getAExpression()
   * @generated
   */
  int AEXPRESSION = 14;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AEXPRESSION__LEFT = AEXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AEXPRESSION__OP = AEXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AEXPRESSION__RIGHT = AEXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>AExpression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AEXPRESSION_FEATURE_COUNT = AEXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.ATermImpl <em>ATerm</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.ATermImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getATerm()
   * @generated
   */
  int ATERM = 15;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATERM__LEFT = AEXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATERM__OP = AEXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATERM__RIGHT = AEXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>ATerm</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATERM_FEATURE_COUNT = AEXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BExpressionImpl <em>BExpression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.BExpressionImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBExpression()
   * @generated
   */
  int BEXPRESSION = 16;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEXPRESSION__LEFT = BEXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEXPRESSION__OP = BEXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEXPRESSION__RIGHT = BEXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>BExpression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEXPRESSION_FEATURE_COUNT = BEXPR_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BTermImpl <em>BTerm</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see edu.ucf.cs.whilelang.whileLang.impl.BTermImpl
   * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBTerm()
   * @generated
   */
  int BTERM = 17;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BTERM__LEFT = BEXPR_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BTERM__OP = BEXPR_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BTERM__RIGHT = BEXPR_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>BTerm</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BTERM_FEATURE_COUNT = BEXPR_FEATURE_COUNT + 3;


  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.S <em>S</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>S</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.S
   * @generated
   */
  EClass getS();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.CompoundS <em>Compound S</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compound S</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.CompoundS
   * @generated
   */
  EClass getCompoundS();

  /**
   * Returns the meta object for the containment reference list '{@link edu.ucf.cs.whilelang.whileLang.CompoundS#getStmts <em>Stmts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Stmts</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.CompoundS#getStmts()
   * @see #getCompoundS()
   * @generated
   */
  EReference getCompoundS_Stmts();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.AssignS <em>Assign S</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assign S</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AssignS
   * @generated
   */
  EClass getAssignS();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.AssignS#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AssignS#getVar()
   * @see #getAssignS()
   * @generated
   */
  EAttribute getAssignS_Var();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.AssignS#getAexp <em>Aexp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Aexp</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AssignS#getAexp()
   * @see #getAssignS()
   * @generated
   */
  EReference getAssignS_Aexp();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.SkipS <em>Skip S</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Skip S</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.SkipS
   * @generated
   */
  EClass getSkipS();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.WhileS <em>While S</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While S</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.WhileS
   * @generated
   */
  EClass getWhileS();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.WhileS#getBexp <em>Bexp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bexp</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.WhileS#getBexp()
   * @see #getWhileS()
   * @generated
   */
  EReference getWhileS_Bexp();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.WhileS#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.WhileS#getBlock()
   * @see #getWhileS()
   * @generated
   */
  EReference getWhileS_Block();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.IfS <em>If S</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If S</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.IfS
   * @generated
   */
  EClass getIfS();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.IfS#getBexp <em>Bexp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bexp</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.IfS#getBexp()
   * @see #getIfS()
   * @generated
   */
  EReference getIfS_Bexp();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.IfS#getS1 <em>S1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>S1</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.IfS#getS1()
   * @see #getIfS()
   * @generated
   */
  EReference getIfS_S1();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.IfS#getS2 <em>S2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>S2</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.IfS#getS2()
   * @see #getIfS()
   * @generated
   */
  EReference getIfS_S2();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.AExpr <em>AExpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>AExpr</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AExpr
   * @generated
   */
  EClass getAExpr();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.VarRefExpr <em>Var Ref Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Ref Expr</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.VarRefExpr
   * @generated
   */
  EClass getVarRefExpr();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.VarRefExpr#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.VarRefExpr#getVar()
   * @see #getVarRefExpr()
   * @generated
   */
  EAttribute getVarRefExpr_Var();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.NumLitExpr <em>Num Lit Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Num Lit Expr</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.NumLitExpr
   * @generated
   */
  EClass getNumLitExpr();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.NumLitExpr#isNegated <em>Negated</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Negated</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.NumLitExpr#isNegated()
   * @see #getNumLitExpr()
   * @generated
   */
  EAttribute getNumLitExpr_Negated();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.NumLitExpr#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.NumLitExpr#getVal()
   * @see #getNumLitExpr()
   * @generated
   */
  EAttribute getNumLitExpr_Val();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.BExpr <em>BExpr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>BExpr</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BExpr
   * @generated
   */
  EClass getBExpr();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.NotExpr <em>Not Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Expr</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.NotExpr
   * @generated
   */
  EClass getNotExpr();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.NotExpr#getBexp <em>Bexp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bexp</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.NotExpr#getBexp()
   * @see #getNotExpr()
   * @generated
   */
  EReference getNotExpr_Bexp();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.BCompExp <em>BComp Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>BComp Exp</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BCompExp
   * @generated
   */
  EClass getBCompExp();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.BCompExp#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BCompExp#getLeft()
   * @see #getBCompExp()
   * @generated
   */
  EReference getBCompExp_Left();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.BCompExp#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BCompExp#getOp()
   * @see #getBCompExp()
   * @generated
   */
  EAttribute getBCompExp_Op();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.BCompExp#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BCompExp#getRight()
   * @see #getBCompExp()
   * @generated
   */
  EReference getBCompExp_Right();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.BPrimary <em>BPrimary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>BPrimary</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BPrimary
   * @generated
   */
  EClass getBPrimary();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.BPrimary#getBval <em>Bval</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bval</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BPrimary#getBval()
   * @see #getBPrimary()
   * @generated
   */
  EAttribute getBPrimary_Bval();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.AExpression <em>AExpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>AExpression</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AExpression
   * @generated
   */
  EClass getAExpression();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.AExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AExpression#getLeft()
   * @see #getAExpression()
   * @generated
   */
  EReference getAExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.AExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AExpression#getOp()
   * @see #getAExpression()
   * @generated
   */
  EAttribute getAExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.AExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.AExpression#getRight()
   * @see #getAExpression()
   * @generated
   */
  EReference getAExpression_Right();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.ATerm <em>ATerm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ATerm</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.ATerm
   * @generated
   */
  EClass getATerm();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.ATerm#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.ATerm#getLeft()
   * @see #getATerm()
   * @generated
   */
  EReference getATerm_Left();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.ATerm#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.ATerm#getOp()
   * @see #getATerm()
   * @generated
   */
  EAttribute getATerm_Op();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.ATerm#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.ATerm#getRight()
   * @see #getATerm()
   * @generated
   */
  EReference getATerm_Right();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.BExpression <em>BExpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>BExpression</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BExpression
   * @generated
   */
  EClass getBExpression();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.BExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BExpression#getLeft()
   * @see #getBExpression()
   * @generated
   */
  EReference getBExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.BExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BExpression#getOp()
   * @see #getBExpression()
   * @generated
   */
  EAttribute getBExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.BExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BExpression#getRight()
   * @see #getBExpression()
   * @generated
   */
  EReference getBExpression_Right();

  /**
   * Returns the meta object for class '{@link edu.ucf.cs.whilelang.whileLang.BTerm <em>BTerm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>BTerm</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BTerm
   * @generated
   */
  EClass getBTerm();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.BTerm#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BTerm#getLeft()
   * @see #getBTerm()
   * @generated
   */
  EReference getBTerm_Left();

  /**
   * Returns the meta object for the attribute '{@link edu.ucf.cs.whilelang.whileLang.BTerm#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BTerm#getOp()
   * @see #getBTerm()
   * @generated
   */
  EAttribute getBTerm_Op();

  /**
   * Returns the meta object for the containment reference '{@link edu.ucf.cs.whilelang.whileLang.BTerm#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see edu.ucf.cs.whilelang.whileLang.BTerm#getRight()
   * @see #getBTerm()
   * @generated
   */
  EReference getBTerm_Right();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  WhileLangFactory getWhileLangFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.ProgramImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.SImpl <em>S</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.SImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getS()
     * @generated
     */
    EClass S = eINSTANCE.getS();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.CompoundSImpl <em>Compound S</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.CompoundSImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getCompoundS()
     * @generated
     */
    EClass COMPOUND_S = eINSTANCE.getCompoundS();

    /**
     * The meta object literal for the '<em><b>Stmts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOUND_S__STMTS = eINSTANCE.getCompoundS_Stmts();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.AssignSImpl <em>Assign S</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.AssignSImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getAssignS()
     * @generated
     */
    EClass ASSIGN_S = eINSTANCE.getAssignS();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGN_S__VAR = eINSTANCE.getAssignS_Var();

    /**
     * The meta object literal for the '<em><b>Aexp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGN_S__AEXP = eINSTANCE.getAssignS_Aexp();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.SkipSImpl <em>Skip S</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.SkipSImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getSkipS()
     * @generated
     */
    EClass SKIP_S = eINSTANCE.getSkipS();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.WhileSImpl <em>While S</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileSImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getWhileS()
     * @generated
     */
    EClass WHILE_S = eINSTANCE.getWhileS();

    /**
     * The meta object literal for the '<em><b>Bexp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_S__BEXP = eINSTANCE.getWhileS_Bexp();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_S__BLOCK = eINSTANCE.getWhileS_Block();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.IfSImpl <em>If S</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.IfSImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getIfS()
     * @generated
     */
    EClass IF_S = eINSTANCE.getIfS();

    /**
     * The meta object literal for the '<em><b>Bexp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_S__BEXP = eINSTANCE.getIfS_Bexp();

    /**
     * The meta object literal for the '<em><b>S1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_S__S1 = eINSTANCE.getIfS_S1();

    /**
     * The meta object literal for the '<em><b>S2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_S__S2 = eINSTANCE.getIfS_S2();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.AExprImpl <em>AExpr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.AExprImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getAExpr()
     * @generated
     */
    EClass AEXPR = eINSTANCE.getAExpr();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.VarRefExprImpl <em>Var Ref Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.VarRefExprImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getVarRefExpr()
     * @generated
     */
    EClass VAR_REF_EXPR = eINSTANCE.getVarRefExpr();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_REF_EXPR__VAR = eINSTANCE.getVarRefExpr_Var();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.NumLitExprImpl <em>Num Lit Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.NumLitExprImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getNumLitExpr()
     * @generated
     */
    EClass NUM_LIT_EXPR = eINSTANCE.getNumLitExpr();

    /**
     * The meta object literal for the '<em><b>Negated</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUM_LIT_EXPR__NEGATED = eINSTANCE.getNumLitExpr_Negated();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUM_LIT_EXPR__VAL = eINSTANCE.getNumLitExpr_Val();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BExprImpl <em>BExpr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.BExprImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBExpr()
     * @generated
     */
    EClass BEXPR = eINSTANCE.getBExpr();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.NotExprImpl <em>Not Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.NotExprImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getNotExpr()
     * @generated
     */
    EClass NOT_EXPR = eINSTANCE.getNotExpr();

    /**
     * The meta object literal for the '<em><b>Bexp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_EXPR__BEXP = eINSTANCE.getNotExpr_Bexp();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BCompExpImpl <em>BComp Exp</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.BCompExpImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBCompExp()
     * @generated
     */
    EClass BCOMP_EXP = eINSTANCE.getBCompExp();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BCOMP_EXP__LEFT = eINSTANCE.getBCompExp_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BCOMP_EXP__OP = eINSTANCE.getBCompExp_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BCOMP_EXP__RIGHT = eINSTANCE.getBCompExp_Right();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BPrimaryImpl <em>BPrimary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.BPrimaryImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBPrimary()
     * @generated
     */
    EClass BPRIMARY = eINSTANCE.getBPrimary();

    /**
     * The meta object literal for the '<em><b>Bval</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BPRIMARY__BVAL = eINSTANCE.getBPrimary_Bval();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.AExpressionImpl <em>AExpression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.AExpressionImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getAExpression()
     * @generated
     */
    EClass AEXPRESSION = eINSTANCE.getAExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AEXPRESSION__LEFT = eINSTANCE.getAExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AEXPRESSION__OP = eINSTANCE.getAExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AEXPRESSION__RIGHT = eINSTANCE.getAExpression_Right();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.ATermImpl <em>ATerm</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.ATermImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getATerm()
     * @generated
     */
    EClass ATERM = eINSTANCE.getATerm();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATERM__LEFT = eINSTANCE.getATerm_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATERM__OP = eINSTANCE.getATerm_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATERM__RIGHT = eINSTANCE.getATerm_Right();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BExpressionImpl <em>BExpression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.BExpressionImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBExpression()
     * @generated
     */
    EClass BEXPRESSION = eINSTANCE.getBExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BEXPRESSION__LEFT = eINSTANCE.getBExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BEXPRESSION__OP = eINSTANCE.getBExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BEXPRESSION__RIGHT = eINSTANCE.getBExpression_Right();

    /**
     * The meta object literal for the '{@link edu.ucf.cs.whilelang.whileLang.impl.BTermImpl <em>BTerm</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see edu.ucf.cs.whilelang.whileLang.impl.BTermImpl
     * @see edu.ucf.cs.whilelang.whileLang.impl.WhileLangPackageImpl#getBTerm()
     * @generated
     */
    EClass BTERM = eINSTANCE.getBTerm();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BTERM__LEFT = eINSTANCE.getBTerm_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BTERM__OP = eINSTANCE.getBTerm_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BTERM__RIGHT = eINSTANCE.getBTerm_Right();

  }

} //WhileLangPackage
